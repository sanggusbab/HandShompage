{"version":3,"sources":["slide.js"],"names":["$","document","ready","slide","querySelector","slideWidth","clientWidth","prevBtn","nextBtn","contBtn","slideItems","querySelectorAll","maxSlide","length","currSlide","startSlide","endSlide","startElem","createElement","tagName","endElem","classList","forEach","c","add","innerHTML","before","after","offset","i","setAttribute","nextMove","setTimeout","prevMove","addEventListener","window","startPoint","endPoint","e","pageX","loopInterval","setInterval","buttonStop","buttonReplay","stopStatus","clearInterval","console","log"],"mappings":";;AACAA,CAAC,CAACC,QAAD,CAAD,CAAYC,KAAZ,CAAkB,YAAY;AAAE;AAC5B,MAAMC,KAAK,GAAGF,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAd;AACA,MAAIC,UAAU,GAAGF,KAAK,CAACG,WAAvB,CAF0B,CAI1B;;AACA,MAAMC,OAAO,GAAGN,QAAQ,CAACG,aAAT,CAAuB,oBAAvB,CAAhB;AACA,MAAMI,OAAO,GAAGP,QAAQ,CAACG,aAAT,CAAuB,oBAAvB,CAAhB;AACA,MAAMK,OAAO,GAAGR,QAAQ,CAACG,aAAT,CAAuB,uBAAvB,CAAhB,CAP0B,CAS1B;;AACA,MAAIM,UAAU,GAAGT,QAAQ,CAACU,gBAAT,CAA0B,aAA1B,CAAjB,CAV0B,CAW1B;;AACA,MAAMC,QAAQ,GAAGF,UAAU,CAACG,MAA5B,CAZ0B,CAc1B;;AACA,MAAIC,SAAS,GAAG,CAAhB,CAf0B,CAiB1B;;AACA,MAAMC,UAAU,GAAGL,UAAU,CAAC,CAAD,CAA7B;AACA,MAAMM,QAAQ,GAAGN,UAAU,CAACA,UAAU,CAACG,MAAX,GAAoB,CAArB,CAA3B,CAnB0B,CAqB1B;;AACA,MAAMI,SAAS,GAAGhB,QAAQ,CAACiB,aAAT,CAAuBH,UAAU,CAACI,OAAlC,CAAlB;AACA,MAAMC,OAAO,GAAGnB,QAAQ,CAACiB,aAAT,CAAuBF,QAAQ,CAACG,OAAhC,CAAhB,CAvB0B,CAyB1B;;AACAH,EAAAA,QAAQ,CAACK,SAAT,CAAmBC,OAAnB,CAA2B,UAACC,CAAD;AAAA,WAAOH,OAAO,CAACC,SAAR,CAAkBG,GAAlB,CAAsBD,CAAtB,CAAP;AAAA,GAA3B;AACAH,EAAAA,OAAO,CAACK,SAAR,GAAoBT,QAAQ,CAACS,SAA7B;AACAV,EAAAA,UAAU,CAACM,SAAX,CAAqBC,OAArB,CAA6B,UAACC,CAAD;AAAA,WAAON,SAAS,CAACI,SAAV,CAAoBG,GAApB,CAAwBD,CAAxB,CAAP;AAAA,GAA7B;AACAN,EAAAA,SAAS,CAACQ,SAAV,GAAsBV,UAAU,CAACU,SAAjC,CA7B0B,CA+B1B;;AACAf,EAAAA,UAAU,CAAC,CAAD,CAAV,CAAcgB,MAAd,CAAqBN,OAArB;AACAV,EAAAA,UAAU,CAACA,UAAU,CAACG,MAAX,GAAoB,CAArB,CAAV,CAAkCc,KAAlC,CAAwCV,SAAxC,EAjC0B,CAmC1B;;AACAP,EAAAA,UAAU,GAAGT,QAAQ,CAACU,gBAAT,CAA0B,aAA1B,CAAb;AACA,MAAIiB,MAAM,GAAGvB,UAAU,GAAGS,SAA1B;AACAJ,EAAAA,UAAU,CAACY,OAAX,CAAmB,UAACO,CAAD,EAAO;AACtBA,IAAAA,CAAC,CAACC,YAAF,CAAe,OAAf,kBAAiC,CAACF,MAAlC;AACH,GAFD;;AAIA,WAASG,QAAT,GAAoB;AAChBjB,IAAAA,SAAS,GADO,CAEhB;;AACA,QAAIA,SAAS,IAAIF,QAAjB,EAA2B;AACvB;AACA,UAAMgB,OAAM,GAAGvB,UAAU,GAAGS,SAA5B,CAFuB,CAGvB;;;AACAJ,MAAAA,UAAU,CAACY,OAAX,CAAmB,UAACO,CAAD,EAAO;AACtBA,QAAAA,CAAC,CAACC,YAAF,CAAe,OAAf,kBAAiC,CAACF,OAAlC;AACH,OAFD;AAGH,KAPD,MAOO;AACH;AACAd,MAAAA,SAAS,GAAG,CAAZ;;AACA,UAAIc,QAAM,GAAGvB,UAAU,GAAGS,SAA1B;;AACAJ,MAAAA,UAAU,CAACY,OAAX,CAAmB,UAACO,CAAD,EAAO;AACtBA,QAAAA,CAAC,CAACC,YAAF,CAAe,OAAf,wBAAuC,CAAvC,eAAoD,CAACF,QAArD;AACH,OAFD;AAGAd,MAAAA,SAAS;AACTc,MAAAA,QAAM,GAAGvB,UAAU,GAAGS,SAAtB,CARG,CASH;AACA;;AACAkB,MAAAA,UAAU,CAAC,YAAM;AACb;AACAtB,QAAAA,UAAU,CAACY,OAAX,CAAmB,UAACO,CAAD,EAAO;AACtBA,UAAAA,CAAC,CAACC,YAAF,CAAe,OAAf,wBAAuC,CAAvC,eAAoD,CAACF,QAArD;AACH,SAFD;AAGH,OALS,EAKP,CALO,CAAV;AAMH;AACJ;;AACD,WAASK,QAAT,GAAoB;AAChBnB,IAAAA,SAAS,GADO,CAEhB;;AACA,QAAIA,SAAS,GAAG,CAAhB,EAAmB;AACf;AACA,UAAMc,QAAM,GAAGvB,UAAU,GAAGS,SAA5B,CAFe,CAGf;;;AACAJ,MAAAA,UAAU,CAACY,OAAX,CAAmB,UAACO,CAAD,EAAO;AACtBA,QAAAA,CAAC,CAACC,YAAF,CAAe,OAAf,kBAAiC,CAACF,QAAlC;AACH,OAFD;AAGH,KAPD,MAOO;AACH;AACAd,MAAAA,SAAS,GAAGF,QAAQ,GAAG,CAAvB;;AACA,UAAIgB,QAAM,GAAGvB,UAAU,GAAGS,SAA1B,CAHG,CAIH;;;AACAJ,MAAAA,UAAU,CAACY,OAAX,CAAmB,UAACO,CAAD,EAAO;AACtBA,QAAAA,CAAC,CAACC,YAAF,CAAe,OAAf,wBAAuC,CAAvC,eAAoD,CAACF,QAArD;AACH,OAFD;AAGAd,MAAAA,SAAS;AACTc,MAAAA,QAAM,GAAGvB,UAAU,GAAGS,SAAtB;AACAkB,MAAAA,UAAU,CAAC,YAAM;AACb;AACAtB,QAAAA,UAAU,CAACY,OAAX,CAAmB,UAACO,CAAD,EAAO;AACtB;AACAA,UAAAA,CAAC,CAACC,YAAF,CAAe,OAAf,wBAAuC,CAAvC,eAAoD,CAACF,QAArD;AACH,SAHD;AAIH,OANS,EAMP,CANO,CAAV;AAOH;AACJ,GAnGyB,CAqG1B;;;AACApB,EAAAA,OAAO,CAAC0B,gBAAR,CAAyB,OAAzB,EAAkC,YAAM;AACpC;AACAH,IAAAA,QAAQ;AACX,GAHD,EAtG0B,CA0G1B;;AACAxB,EAAAA,OAAO,CAAC2B,gBAAR,CAAyB,OAAzB,EAAkC,YAAM;AACpC;AACAD,IAAAA,QAAQ;AACX,GAHD,EA3G0B,CAgH1B;;AACAE,EAAAA,MAAM,CAACD,gBAAP,CAAwB,QAAxB,EAAkC,YAAM;AACpC7B,IAAAA,UAAU,GAAGF,KAAK,CAACG,WAAnB;AACH,GAFD,EAjH0B,CAoH1B;;AACA,MAAI8B,UAAU,GAAG,CAAjB;AACA,MAAIC,QAAQ,GAAG,CAAf,CAtH0B,CAwH1B;;AACAlC,EAAAA,KAAK,CAAC+B,gBAAN,CAAuB,WAAvB,EAAoC,UAACI,CAAD,EAAO;AACvCF,IAAAA,UAAU,GAAGE,CAAC,CAACC,KAAf,CADuC,CACjB;AACzB,GAFD;AAIApC,EAAAA,KAAK,CAAC+B,gBAAN,CAAuB,SAAvB,EAAkC,UAACI,CAAD,EAAO;AACrCD,IAAAA,QAAQ,GAAGC,CAAC,CAACC,KAAb,CADqC,CACjB;;AACpB,QAAIH,UAAU,GAAGC,QAAjB,EAA2B;AACvB;AACAJ,MAAAA,QAAQ;AACX,KAHD,MAGO,IAAIG,UAAU,GAAGC,QAAjB,EAA2B;AAC9B;AACAN,MAAAA,QAAQ;AACX;AACJ,GATD,EA7H0B,CAwI1B;;AACA,MAAIS,YAAY,GAAGC,WAAW,CAAC,YAAM;AACjCV,IAAAA,QAAQ;AACX,GAF6B,EAE3B,IAF2B,CAA9B;AAGA,MAAMW,UAAU,GAAGzC,QAAQ,CAACG,aAAT,CAAuB,aAAvB,CAAnB;AACA,MAAMuC,YAAY,GAAG1C,QAAQ,CAACG,aAAT,CAAuB,eAAvB,CAArB;AACA,MAAIwC,UAAU,GAAG,KAAjB;AACAnC,EAAAA,OAAO,CAACyB,gBAAR,CAAyB,OAAzB,EAAkC,YAAM;AACpC,QAAIU,UAAU,IAAI,KAAlB,EAAyB;AACrBF,MAAAA,UAAU,CAACZ,YAAX,CAAwB,OAAxB,EAAiC,YAAjC;AACAa,MAAAA,YAAY,CAACb,YAAb,CAA0B,OAA1B,EAAmC,YAAnC;AACAe,MAAAA,aAAa,CAACL,YAAD,CAAb;AACAI,MAAAA,UAAU,GAAG,IAAb;AACH,KALD,MAKO;AACHF,MAAAA,UAAU,CAACZ,YAAX,CAAwB,OAAxB,EAAiC,YAAjC;AACAa,MAAAA,YAAY,CAACb,YAAb,CAA0B,OAA1B,EAAmC,YAAnC;AACAU,MAAAA,YAAY,GAAGC,WAAW,CAAC,YAAM;AAC7BV,QAAAA,QAAQ;AACX,OAFyB,EAEvB,IAFuB,CAA1B;AAGAa,MAAAA,UAAU,GAAG,KAAb;AACH;;AACDE,IAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACH,GAfD;AAgBH,CA/JD,E,CA+JG;;AACH,IAAMzC,KAAK,GAAGF,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAd;AACA,IAAIC,UAAU,GAAGF,KAAK,CAACG,WAAvB,C,CAEA;;AACA,IAAMC,OAAO,GAAGN,QAAQ,CAACG,aAAT,CAAuB,oBAAvB,CAAhB;AACA,IAAMI,OAAO,GAAGP,QAAQ,CAACG,aAAT,CAAuB,oBAAvB,CAAhB;AACA,IAAMK,OAAO,GAAGR,QAAQ,CAACG,aAAT,CAAuB,uBAAvB,CAAhB,C,CAEA;;AACA,IAAIM,UAAU,GAAGT,QAAQ,CAACU,gBAAT,CAA0B,aAA1B,CAAjB,C,CACA;;AACA,IAAMC,QAAQ,GAAGF,UAAU,CAACG,MAA5B,C,CAEA;;AACA,IAAIC,SAAS,GAAG,CAAhB,C,CAEA;;AACA,IAAMC,UAAU,GAAGL,UAAU,CAAC,CAAD,CAA7B;AACA,IAAMM,QAAQ,GAAGN,UAAU,CAACA,UAAU,CAACG,MAAX,GAAoB,CAArB,CAA3B,C,CAEA;;AACA,IAAMI,SAAS,GAAGhB,QAAQ,CAACiB,aAAT,CAAuBH,UAAU,CAACI,OAAlC,CAAlB;AACA,IAAMC,OAAO,GAAGnB,QAAQ,CAACiB,aAAT,CAAuBF,QAAQ,CAACG,OAAhC,CAAhB,C,CAEA;;AACAH,QAAQ,CAACK,SAAT,CAAmBC,OAAnB,CAA2B,UAACC,CAAD;AAAA,SAAOH,OAAO,CAACC,SAAR,CAAkBG,GAAlB,CAAsBD,CAAtB,CAAP;AAAA,CAA3B;AACAH,OAAO,CAACK,SAAR,GAAoBT,QAAQ,CAACS,SAA7B;AACAV,UAAU,CAACM,SAAX,CAAqBC,OAArB,CAA6B,UAACC,CAAD;AAAA,SAAON,SAAS,CAACI,SAAV,CAAoBG,GAApB,CAAwBD,CAAxB,CAAP;AAAA,CAA7B;AACAN,SAAS,CAACQ,SAAV,GAAsBV,UAAU,CAACU,SAAjC,C,CAEA;;AACAf,UAAU,CAAC,CAAD,CAAV,CAAcgB,MAAd,CAAqBN,OAArB;AACAV,UAAU,CAACA,UAAU,CAACG,MAAX,GAAoB,CAArB,CAAV,CAAkCc,KAAlC,CAAwCV,SAAxC,E,CAEA;;AACAP,UAAU,GAAGT,QAAQ,CAACU,gBAAT,CAA0B,aAA1B,CAAb;AACA,IAAIiB,MAAM,GAAGvB,UAAU,GAAGS,SAA1B;AACAJ,UAAU,CAACY,OAAX,CAAmB,UAACO,CAAD,EAAO;AACtBA,EAAAA,CAAC,CAACC,YAAF,CAAe,OAAf,kBAAiC,CAACF,MAAlC;AACH,CAFD;;AAIA,SAASG,QAAT,GAAoB;AAChBjB,EAAAA,SAAS,GADO,CAEhB;;AACA,MAAIA,SAAS,IAAIF,QAAjB,EAA2B;AACvB;AACA,QAAMgB,QAAM,GAAGvB,UAAU,GAAGS,SAA5B,CAFuB,CAGvB;;;AACAJ,IAAAA,UAAU,CAACY,OAAX,CAAmB,UAACO,CAAD,EAAO;AACtBA,MAAAA,CAAC,CAACC,YAAF,CAAe,OAAf,kBAAiC,CAACF,QAAlC;AACH,KAFD;AAGH,GAPD,MAOO;AACH;AACAd,IAAAA,SAAS,GAAG,CAAZ;;AACA,QAAIc,QAAM,GAAGvB,UAAU,GAAGS,SAA1B;;AACAJ,IAAAA,UAAU,CAACY,OAAX,CAAmB,UAACO,CAAD,EAAO;AACtBA,MAAAA,CAAC,CAACC,YAAF,CAAe,OAAf,wBAAuC,CAAvC,eAAoD,CAACF,QAArD;AACH,KAFD;AAGAd,IAAAA,SAAS;AACTc,IAAAA,QAAM,GAAGvB,UAAU,GAAGS,SAAtB,CARG,CASH;AACA;;AACAkB,IAAAA,UAAU,CAAC,YAAM;AACb;AACAtB,MAAAA,UAAU,CAACY,OAAX,CAAmB,UAACO,CAAD,EAAO;AACtBA,QAAAA,CAAC,CAACC,YAAF,CAAe,OAAf,wBAAuC,CAAvC,eAAoD,CAACF,QAArD;AACH,OAFD;AAGH,KALS,EAKP,CALO,CAAV;AAMH;AACJ;;AACD,SAASK,QAAT,GAAoB;AAChBnB,EAAAA,SAAS,GADO,CAEhB;;AACA,MAAIA,SAAS,GAAG,CAAhB,EAAmB;AACf;AACA,QAAMc,QAAM,GAAGvB,UAAU,GAAGS,SAA5B,CAFe,CAGf;;;AACAJ,IAAAA,UAAU,CAACY,OAAX,CAAmB,UAACO,CAAD,EAAO;AACtBA,MAAAA,CAAC,CAACC,YAAF,CAAe,OAAf,kBAAiC,CAACF,QAAlC;AACH,KAFD;AAGH,GAPD,MAOO;AACH;AACAd,IAAAA,SAAS,GAAGF,QAAQ,GAAG,CAAvB;;AACA,QAAIgB,QAAM,GAAGvB,UAAU,GAAGS,SAA1B,CAHG,CAIH;;;AACAJ,IAAAA,UAAU,CAACY,OAAX,CAAmB,UAACO,CAAD,EAAO;AACtBA,MAAAA,CAAC,CAACC,YAAF,CAAe,OAAf,wBAAuC,CAAvC,eAAoD,CAACF,QAArD;AACH,KAFD;AAGAd,IAAAA,SAAS;AACTc,IAAAA,QAAM,GAAGvB,UAAU,GAAGS,SAAtB;AACAkB,IAAAA,UAAU,CAAC,YAAM;AACb;AACAtB,MAAAA,UAAU,CAACY,OAAX,CAAmB,UAACO,CAAD,EAAO;AACtB;AACAA,QAAAA,CAAC,CAACC,YAAF,CAAe,OAAf,wBAAuC,CAAvC,eAAoD,CAACF,QAArD;AACH,OAHD;AAIH,KANS,EAMP,CANO,CAAV;AAOH;AACJ,C,CAED;;;AACApB,OAAO,CAAC0B,gBAAR,CAAyB,OAAzB,EAAkC,YAAM;AACpC;AACAH,EAAAA,QAAQ;AACX,CAHD,E,CAIA;;AACAxB,OAAO,CAAC2B,gBAAR,CAAyB,OAAzB,EAAkC,YAAM;AACpC;AACAD,EAAAA,QAAQ;AACX,CAHD,E,CAKA;;AACAE,MAAM,CAACD,gBAAP,CAAwB,QAAxB,EAAkC,YAAM;AACpC7B,EAAAA,UAAU,GAAGF,KAAK,CAACG,WAAnB;AACH,CAFD,E,CAGA;;AACA,IAAI8B,UAAU,GAAG,CAAjB;AACA,IAAIC,QAAQ,GAAG,CAAf,C,CAEA;;AACAlC,KAAK,CAAC+B,gBAAN,CAAuB,WAAvB,EAAoC,UAACI,CAAD,EAAO;AACvCF,EAAAA,UAAU,GAAGE,CAAC,CAACC,KAAf,CADuC,CACjB;AACzB,CAFD;AAIApC,KAAK,CAAC+B,gBAAN,CAAuB,SAAvB,EAAkC,UAACI,CAAD,EAAO;AACrCD,EAAAA,QAAQ,GAAGC,CAAC,CAACC,KAAb,CADqC,CACjB;;AACpB,MAAIH,UAAU,GAAGC,QAAjB,EAA2B;AACvB;AACAJ,IAAAA,QAAQ;AACX,GAHD,MAGO,IAAIG,UAAU,GAAGC,QAAjB,EAA2B;AAC9B;AACAN,IAAAA,QAAQ;AACX;AACJ,CATD,E,CAWA;;AACA,IAAIS,YAAY,GAAGC,WAAW,CAAC,YAAM;AACjCV,EAAAA,QAAQ;AACX,CAF6B,EAE3B,IAF2B,CAA9B;AAGA,IAAMW,UAAU,GAAGzC,QAAQ,CAACG,aAAT,CAAuB,aAAvB,CAAnB;AACA,IAAMuC,YAAY,GAAG1C,QAAQ,CAACG,aAAT,CAAuB,eAAvB,CAArB;AACA,IAAIwC,UAAU,GAAG,KAAjB;AACAnC,OAAO,CAACyB,gBAAR,CAAyB,OAAzB,EAAkC,YAAM;AACpC,MAAIU,UAAU,IAAI,KAAlB,EAAyB;AACrBF,IAAAA,UAAU,CAACZ,YAAX,CAAwB,OAAxB,EAAiC,YAAjC;AACAa,IAAAA,YAAY,CAACb,YAAb,CAA0B,OAA1B,EAAmC,YAAnC;AACAe,IAAAA,aAAa,CAACL,YAAD,CAAb;AACAI,IAAAA,UAAU,GAAG,IAAb;AACH,GALD,MAKO;AACHF,IAAAA,UAAU,CAACZ,YAAX,CAAwB,OAAxB,EAAiC,YAAjC;AACAa,IAAAA,YAAY,CAACb,YAAb,CAA0B,OAA1B,EAAmC,YAAnC;AACAU,IAAAA,YAAY,GAAGC,WAAW,CAAC,YAAM;AAC7BV,MAAAA,QAAQ;AACX,KAFyB,EAEvB,IAFuB,CAA1B;AAGAa,IAAAA,UAAU,GAAG,KAAb;AACH;;AACDE,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACH,CAfD","sourcesContent":["\n$(document).ready(function () { // 슬라이크 전체 크기(width 구하기)\n    const slide = document.querySelector(\".slide\");\n    let slideWidth = slide.clientWidth;\n\n    // 버튼 엘리먼트 선택하기\n    const prevBtn = document.querySelector(\".slide_prev_button\");\n    const nextBtn = document.querySelector(\".slide_next_button\");\n    const contBtn = document.querySelector(\".slide_control_button\");\n\n    // 슬라이드 전체를 선택해 값을 변경해주기 위해 슬라이드 전체 선택하기\n    let slideItems = document.querySelectorAll(\".slide_item\");\n    // 현재 슬라이드 위치가 슬라이드 개수를 넘기지 않게 하기 위한 변수\n    const maxSlide = slideItems.length;\n\n    // 버튼 클릭할 때 마다 현재 슬라이드가 어디인지 알려주기 위한 변수\n    let currSlide = 1;\n\n    // 무한 슬라이드를 위해 start, end 슬라이드 복사하기\n    const startSlide = slideItems[0];\n    const endSlide = slideItems[slideItems.length - 1];\n\n    // 엘리먼트 생성\n    const startElem = document.createElement(startSlide.tagName);\n    const endElem = document.createElement(endSlide.tagName);\n\n    // 엘리먼트에 클래스 적용 동일하게 하기\n    endSlide.classList.forEach((c) => endElem.classList.add(c));\n    endElem.innerHTML = endSlide.innerHTML;\n    startSlide.classList.forEach((c) => startElem.classList.add(c));\n    startElem.innerHTML = startSlide.innerHTML;\n\n    // 각 복제한 엘리먼트를 각 위치에 추가하기\n    slideItems[0].before(endElem);\n    slideItems[slideItems.length - 1].after(startElem);\n\n    // 슬라이드 전체를 선택해 값을 변경해주기 위해 슬라이드 전체 선택하기\n    slideItems = document.querySelectorAll(\".slide_item\");\n    let offset = slideWidth * currSlide;\n    slideItems.forEach((i) => {\n        i.setAttribute(\"style\", `left: ${-offset}px`);\n    });\n\n    function nextMove() {\n        currSlide++;\n        // 마지막 슬라이드 이상으로 넘어가지 않게 하기 위해서\n        if (currSlide <= maxSlide) {\n            // 슬라이드를 이동시키기 위한 offset 계산\n            const offset = slideWidth * currSlide;\n            // 각 슬라이드 아이템의 left에 offset 적용\n            slideItems.forEach((i) => {\n                i.setAttribute(\"style\", `left: ${-offset}px`);\n            });\n        } else {\n            // 무한 슬라이드 기능 - currSlide 값만 변경해줘도 되지만 시각적으로 자연스럽게 하기 위해 아래 코드 작성\n            currSlide = 0;\n            let offset = slideWidth * currSlide;\n            slideItems.forEach((i) => {\n                i.setAttribute(\"style\", `transition: ${0}s; left: ${-offset}px`);\n            });\n            currSlide++;\n            offset = slideWidth * currSlide;\n            // 각 슬라이드 아이템의 left에 offset 적용\n            // setTimeout을 사용하는 이유는 비동기 처리를 이용해 transition이 제대로 적용되게 하기 위함\n            setTimeout(() => {\n                // 각 슬라이드 아이템의 left에 offset 적용\n                slideItems.forEach((i) => {\n                    i.setAttribute(\"style\", `transition: ${2}s; left: ${-offset}px`);\n                });\n            }, 0);\n        }\n    }\n    function prevMove() {\n        currSlide--;\n        // 1번째 슬라이드 이하로 넘어가지 않게 하기 위해서\n        if (currSlide > 0) {\n            // 슬라이드를 이동시키기 위한 offset 계산\n            const offset = slideWidth * currSlide;\n            // 각 슬라이드 아이템의 left에 offset 적용\n            slideItems.forEach((i) => {\n                i.setAttribute(\"style\", `left: ${-offset}px`);\n            });\n        } else {\n            // 무한 슬라이드 기능 - currSlide 값만 변경해줘도 되지만 시각적으로 자연스럽게 하기 위해 아래 코드 작성\n            currSlide = maxSlide + 1;\n            let offset = slideWidth * currSlide;\n            // 각 슬라이드 아이템의 left에 offset 적용\n            slideItems.forEach((i) => {\n                i.setAttribute(\"style\", `transition: ${0}s; left: ${-offset}px`);\n            });\n            currSlide--;\n            offset = slideWidth * currSlide;\n            setTimeout(() => {\n                // 각 슬라이드 아이템의 left에 offset 적용\n                slideItems.forEach((i) => {\n                    // i.setAttribute(\"style\", `transition: ${0}s; left: ${-offset}px`);\n                    i.setAttribute(\"style\", `transition: ${2}s; left: ${-offset}px`);\n                });\n            }, 0);\n        }\n    }\n\n    // 버튼 엘리먼트에 클릭 이벤트 추가하기\n    nextBtn.addEventListener(\"click\", () => {\n        // 이후 버튼 누를 경우 현재 슬라이드를 변경\n        nextMove();\n    });\n    // 버튼 엘리먼트에 클릭 이벤트 추가하기\n    prevBtn.addEventListener(\"click\", () => {\n        // 이전 버튼 누를 경우 현재 슬라이드를 변경\n        prevMove();\n    });\n\n    // 브라우저 화면이 조정될 때 마다 slideWidth를 변경하기 위해\n    window.addEventListener(\"resize\", () => {\n        slideWidth = slide.clientWidth;\n    });\n    // 드래그(스와이프) 이벤트를 위한 변수 초기화\n    let startPoint = 0;\n    let endPoint = 0;\n\n    // PC 클릭 이벤트 (드래그)\n    slide.addEventListener(\"mousedown\", (e) => {\n        startPoint = e.pageX; // 마우스 드래그 시작 위치 저장\n    });\n\n    slide.addEventListener(\"mouseup\", (e) => {\n        endPoint = e.pageX; // 마우스 드래그 끝 위치 저장\n        if (startPoint < endPoint) {\n            // 마우스가 오른쪽으로 드래그 된 경우\n            prevMove();\n        } else if (startPoint > endPoint) {\n            // 마우스가 왼쪽으로 드래그 된 경우\n            nextMove();\n        }\n    });\n\n    // 기본적으로 슬라이드 루프 시작하기\n    let loopInterval = setInterval(() => {\n        nextMove();\n    }, 6000);\n    const buttonStop = document.querySelector(\".buttonStop\");\n    const buttonReplay = document.querySelector(\".buttonReplay\");\n    var stopStatus = false;\n    contBtn.addEventListener(\"click\", () => {\n        if (stopStatus == false) {\n            buttonStop.setAttribute(\"style\", 'opacity: 0');\n            buttonReplay.setAttribute(\"style\", 'opacity: 1');\n            clearInterval(loopInterval);\n            stopStatus = true;\n        } else {\n            buttonStop.setAttribute(\"style\", 'opacity: 1');\n            buttonReplay.setAttribute(\"style\", 'opacity: 0');\n            loopInterval = setInterval(() => {\n                nextMove();\n            }, 6000);\n            stopStatus = false;\n        }\n        console.log(stopStatus);\n    });\n});// 슬라이크 전체 크기(width 구하기)\nconst slide = document.querySelector(\".slide\");\nlet slideWidth = slide.clientWidth;\n\n// 버튼 엘리먼트 선택하기\nconst prevBtn = document.querySelector(\".slide_prev_button\");\nconst nextBtn = document.querySelector(\".slide_next_button\");\nconst contBtn = document.querySelector(\".slide_control_button\");\n\n// 슬라이드 전체를 선택해 값을 변경해주기 위해 슬라이드 전체 선택하기\nlet slideItems = document.querySelectorAll(\".slide_item\");\n// 현재 슬라이드 위치가 슬라이드 개수를 넘기지 않게 하기 위한 변수\nconst maxSlide = slideItems.length;\n\n// 버튼 클릭할 때 마다 현재 슬라이드가 어디인지 알려주기 위한 변수\nlet currSlide = 1;\n\n// 무한 슬라이드를 위해 start, end 슬라이드 복사하기\nconst startSlide = slideItems[0];\nconst endSlide = slideItems[slideItems.length - 1];\n\n// 엘리먼트 생성\nconst startElem = document.createElement(startSlide.tagName);\nconst endElem = document.createElement(endSlide.tagName);\n\n// 엘리먼트에 클래스 적용 동일하게 하기\nendSlide.classList.forEach((c) => endElem.classList.add(c));\nendElem.innerHTML = endSlide.innerHTML;\nstartSlide.classList.forEach((c) => startElem.classList.add(c));\nstartElem.innerHTML = startSlide.innerHTML;\n\n// 각 복제한 엘리먼트를 각 위치에 추가하기\nslideItems[0].before(endElem);\nslideItems[slideItems.length - 1].after(startElem);\n\n// 슬라이드 전체를 선택해 값을 변경해주기 위해 슬라이드 전체 선택하기\nslideItems = document.querySelectorAll(\".slide_item\");\nlet offset = slideWidth * currSlide;\nslideItems.forEach((i) => {\n    i.setAttribute(\"style\", `left: ${-offset}px`);\n});\n\nfunction nextMove() {\n    currSlide++;\n    // 마지막 슬라이드 이상으로 넘어가지 않게 하기 위해서\n    if (currSlide <= maxSlide) {\n        // 슬라이드를 이동시키기 위한 offset 계산\n        const offset = slideWidth * currSlide;\n        // 각 슬라이드 아이템의 left에 offset 적용\n        slideItems.forEach((i) => {\n            i.setAttribute(\"style\", `left: ${-offset}px`);\n        });\n    } else {\n        // 무한 슬라이드 기능 - currSlide 값만 변경해줘도 되지만 시각적으로 자연스럽게 하기 위해 아래 코드 작성\n        currSlide = 0;\n        let offset = slideWidth * currSlide;\n        slideItems.forEach((i) => {\n            i.setAttribute(\"style\", `transition: ${0}s; left: ${-offset}px`);\n        });\n        currSlide++;\n        offset = slideWidth * currSlide;\n        // 각 슬라이드 아이템의 left에 offset 적용\n        // setTimeout을 사용하는 이유는 비동기 처리를 이용해 transition이 제대로 적용되게 하기 위함\n        setTimeout(() => {\n            // 각 슬라이드 아이템의 left에 offset 적용\n            slideItems.forEach((i) => {\n                i.setAttribute(\"style\", `transition: ${2}s; left: ${-offset}px`);\n            });\n        }, 0);\n    }\n}\nfunction prevMove() {\n    currSlide--;\n    // 1번째 슬라이드 이하로 넘어가지 않게 하기 위해서\n    if (currSlide > 0) {\n        // 슬라이드를 이동시키기 위한 offset 계산\n        const offset = slideWidth * currSlide;\n        // 각 슬라이드 아이템의 left에 offset 적용\n        slideItems.forEach((i) => {\n            i.setAttribute(\"style\", `left: ${-offset}px`);\n        });\n    } else {\n        // 무한 슬라이드 기능 - currSlide 값만 변경해줘도 되지만 시각적으로 자연스럽게 하기 위해 아래 코드 작성\n        currSlide = maxSlide + 1;\n        let offset = slideWidth * currSlide;\n        // 각 슬라이드 아이템의 left에 offset 적용\n        slideItems.forEach((i) => {\n            i.setAttribute(\"style\", `transition: ${0}s; left: ${-offset}px`);\n        });\n        currSlide--;\n        offset = slideWidth * currSlide;\n        setTimeout(() => {\n            // 각 슬라이드 아이템의 left에 offset 적용\n            slideItems.forEach((i) => {\n                // i.setAttribute(\"style\", `transition: ${0}s; left: ${-offset}px`);\n                i.setAttribute(\"style\", `transition: ${2}s; left: ${-offset}px`);\n            });\n        }, 0);\n    }\n}\n\n// 버튼 엘리먼트에 클릭 이벤트 추가하기\nnextBtn.addEventListener(\"click\", () => {\n    // 이후 버튼 누를 경우 현재 슬라이드를 변경\n    nextMove();\n});\n// 버튼 엘리먼트에 클릭 이벤트 추가하기\nprevBtn.addEventListener(\"click\", () => {\n    // 이전 버튼 누를 경우 현재 슬라이드를 변경\n    prevMove();\n});\n\n// 브라우저 화면이 조정될 때 마다 slideWidth를 변경하기 위해\nwindow.addEventListener(\"resize\", () => {\n    slideWidth = slide.clientWidth;\n});\n// 드래그(스와이프) 이벤트를 위한 변수 초기화\nlet startPoint = 0;\nlet endPoint = 0;\n\n// PC 클릭 이벤트 (드래그)\nslide.addEventListener(\"mousedown\", (e) => {\n    startPoint = e.pageX; // 마우스 드래그 시작 위치 저장\n});\n\nslide.addEventListener(\"mouseup\", (e) => {\n    endPoint = e.pageX; // 마우스 드래그 끝 위치 저장\n    if (startPoint < endPoint) {\n        // 마우스가 오른쪽으로 드래그 된 경우\n        prevMove();\n    } else if (startPoint > endPoint) {\n        // 마우스가 왼쪽으로 드래그 된 경우\n        nextMove();\n    }\n});\n\n// 기본적으로 슬라이드 루프 시작하기\nlet loopInterval = setInterval(() => {\n    nextMove();\n}, 6000);\nconst buttonStop = document.querySelector(\".buttonStop\");\nconst buttonReplay = document.querySelector(\".buttonReplay\");\nvar stopStatus = false;\ncontBtn.addEventListener(\"click\", () => {\n    if (stopStatus == false) {\n        buttonStop.setAttribute(\"style\", 'opacity: 0');\n        buttonReplay.setAttribute(\"style\", 'opacity: 1');\n        clearInterval(loopInterval);\n        stopStatus = true;\n    } else {\n        buttonStop.setAttribute(\"style\", 'opacity: 1');\n        buttonReplay.setAttribute(\"style\", 'opacity: 0');\n        loopInterval = setInterval(() => {\n            nextMove();\n        }, 6000);\n        stopStatus = false;\n    }\n    console.log(stopStatus);\n});"],"file":"slide.dev.js"}