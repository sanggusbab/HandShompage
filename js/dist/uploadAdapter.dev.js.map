{"version":3,"sources":["uploadAdapter.js"],"names":["UploadAdapter","loader","file","then","Promise","resolve","reject","_initRequest","_initListeners","_sendRequest","xhr","XMLHttpRequest","open","responseType","genericErrorText","addEventListener","response","error","message","url","data","FormData","append","send","MyCustomUploadAdapterPlugin","editor","plugins","get","createUploadAdapter"],"mappings":";;;;;;;;IAAMA,a;;;AACF,yBAAYC,MAAZ,EAAoB;AAAA;;AAChB,SAAKA,MAAL,GAAcA,MAAd;AACH;;;;6BAEQ;AAAA;;AACL,aAAO,KAAKA,MAAL,CAAYC,IAAZ,CAAiBC,IAAjB,CAAsB,UAAAD,IAAI;AAAA,eAAI,IAAIE,OAAJ,CAAa,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACnE,UAAA,KAAI,CAACC,YAAL;;AACA,UAAA,KAAI,CAACC,cAAL,CAAoBH,OAApB,EAA6BC,MAA7B,EAAqCJ,IAArC;;AACA,UAAA,KAAI,CAACO,YAAL,CAAkBP,IAAlB;AACH,SAJoC,CAAJ;AAAA,OAA1B,CAAP;AAKH;;;mCAEc;AACX,UAAMQ,GAAG,GAAG,KAAKA,GAAL,GAAW,IAAIC,cAAJ,EAAvB;AACAD,MAAAA,GAAG,CAACE,IAAJ,CAAS,MAAT,EAAiB,6CAAjB,EAAgE,IAAhE;AACAF,MAAAA,GAAG,CAACG,YAAJ,GAAmB,MAAnB;AACH;;;mCAEcR,O,EAASC,M,EAAQJ,I,EAAM;AAClC,UAAMQ,GAAG,GAAG,KAAKA,GAAjB;AACA,UAAMT,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMa,gBAAgB,GAAG,mBAAzB;AAEAJ,MAAAA,GAAG,CAACK,gBAAJ,CAAqB,OAArB,EAA8B,YAAM;AAAET,QAAAA,MAAM,CAACQ,gBAAD,CAAN;AAA0B,OAAhE;AACAJ,MAAAA,GAAG,CAACK,gBAAJ,CAAqB,OAArB,EAA8B;AAAA,eAAMT,MAAM,EAAZ;AAAA,OAA9B;AACAI,MAAAA,GAAG,CAACK,gBAAJ,CAAqB,MAArB,EAA6B,YAAM;AAC/B,YAAMC,QAAQ,GAAGN,GAAG,CAACM,QAArB;;AACA,YAAI,CAACA,QAAD,IAAaA,QAAQ,CAACC,KAA1B,EAAiC;AAC7B,iBAAOX,MAAM,CAACU,QAAQ,IAAIA,QAAQ,CAACC,KAArB,GAA6BD,QAAQ,CAACC,KAAT,CAAeC,OAA5C,GAAsDJ,gBAAvD,CAAb;AACH;;AAEDT,QAAAA,OAAO,CAAC;AACJ,qBAASW,QAAQ,CAACG,GADd,CACkB;;AADlB,SAAD,CAAP;AAGH,OATD;AAUH;;;iCAEYjB,I,EAAM;AACf,UAAMkB,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,MAAAA,IAAI,CAACE,MAAL,CAAY,QAAZ,EAAsBpB,IAAtB;AACA,WAAKQ,GAAL,CAASa,IAAT,CAAcH,IAAd;AACH;;;;;;AAEL,SAASI,2BAAT,CAAqCC,MAArC,EAA6C;AACzCA,EAAAA,MAAM,CAACC,OAAP,CAAeC,GAAf,CAAmB,gBAAnB,EAAqCC,mBAArC,GAA2D,UAAC3B,MAAD,EAAY;AACnE,WAAO,IAAID,aAAJ,CAAkBC,MAAlB,CAAP;AACH,GAFD;AAGH","sourcesContent":["class UploadAdapter {\r\n    constructor(loader) {\r\n        this.loader = loader;\r\n    }\r\n\r\n    upload() {\r\n        return this.loader.file.then(file => new Promise(((resolve, reject) => {\r\n            this._initRequest();\r\n            this._initListeners(resolve, reject, file);\r\n            this._sendRequest(file);\r\n        })))\r\n    }\r\n\r\n    _initRequest() {\r\n        const xhr = this.xhr = new XMLHttpRequest();\r\n        xhr.open('POST', 'https://localhost:8000/uploadFileMamagement', true);\r\n        xhr.responseType = 'json';\r\n    }\r\n\r\n    _initListeners(resolve, reject, file) {\r\n        const xhr = this.xhr;\r\n        const loader = this.loader;\r\n        const genericErrorText = '파일을 업로드 할 수 없습니다.'\r\n\r\n        xhr.addEventListener('error', () => { reject(genericErrorText) })\r\n        xhr.addEventListener('abort', () => reject())\r\n        xhr.addEventListener('load', () => {\r\n            const response = xhr.response\r\n            if (!response || response.error) {\r\n                return reject(response && response.error ? response.error.message : genericErrorText);\r\n            }\r\n\r\n            resolve({\r\n                default: response.url //업로드된 파일 주소\r\n            })\r\n        })\r\n    }\r\n\r\n    _sendRequest(file) {\r\n        const data = new FormData()\r\n        data.append('upload', file)\r\n        this.xhr.send(data)\r\n    }\r\n}\r\nfunction MyCustomUploadAdapterPlugin(editor) {\r\n    editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {\r\n        return new UploadAdapter(loader)\r\n    }\r\n}"],"file":"uploadAdapter.dev.js"}