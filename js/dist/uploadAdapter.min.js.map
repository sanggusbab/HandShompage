{"version":3,"sources":["uploadAdapter.js"],"names":["UploadAdapter","loader","_classCallCheck","this","_this","file","then","Promise","resolve","reject","_initRequest","_initListeners","_sendRequest","xhr","XMLHttpRequest","open","responseType","genericErrorText","addEventListener","response","error","message","default","url","data","FormData","append","send","MyCustomUploadAdapterPlugin","editor","createUploadAdapter"],"mappings":"uZAAMA,yBACF,SAAAA,EAAYC,GAAQC,gBAAAC,KAAAH,GAChBG,KAAKF,OAASA,wDAGT,IAAAG,EAAAD,KACL,OAAOA,KAAKF,OAAOI,KAAKC,KAAK,SAAAD,GAAI,OAAI,IAAIE,QAAS,SAACC,EAASC,GACxDL,EAAKM,eAPXV,EAQWW,eAAeH,EAASC,EAAQJ,GACrCD,EAAKQ,aAAaP,8CAPtB,IAAKJ,EAASA,KAAdY,IAAA,IAAAC,eACHD,EAAAE,KAAA,OAAA,+CAAA,GAaGF,EAAIG,aAAe,8CAGRR,EAASC,GAdf,IAAAI,EAAAV,KAAAU,IACEI,GAeQd,KAAKF,OAfIK,qBACpBO,EAAAK,iBAAA,QAAA,WAAAT,EAAAQ,KAkBJJ,EAAIK,iBAAiB,QAAS,WAAA,OAAMT,MAjBhCI,EAAAK,iBAAKP,OAAeH,WAmBpB,IAAMW,EAAWN,EAAIM,SAlBrB,IAAKP,GAAaP,EAAlBe,MAH6B,OAAAX,EAAAU,GAAAA,EAAAC,MAAAD,EAAAC,MAAAC,QAAAJ,GA0B7BT,EAAQ,CACJc,QAASH,EAASI,6CAhB7BlB,GAsBG,IAAMmB,EAAO,IAAIC,SACjBD,EAAKE,OAAO,SAAUrB,GACtBF,KAAKU,IAAIc,KAAKH,YAnBd,SAAAI,4BAAyBC,GAEzBhB,EAAIK,QAAAA,IAAAA,kBAA0BY,oBAAM,SAAA7B,GAAEQ,OAAOQ,IAAAA,cAAPhB","file":"uploadAdapter.min.js","sourcesContent":["class UploadAdapter {\r\n    constructor(loader) {\r\n        this.loader = loader;\r\n    }\r\n\r\n    upload() {\r\n        return this.loader.file.then(file => new Promise(((resolve, reject) => {\r\n            this._initRequest();\r\n            this._initListeners(resolve, reject, file);\r\n            this._sendRequest(file);\r\n        })))\r\n    }\r\n\r\n    _initRequest() {\r\n        const xhr = this.xhr = new XMLHttpRequest();\r\n        xhr.open('POST', 'https://localhost:8000/uploadFileMamagement', true);\r\n        xhr.responseType = 'json';\r\n    }\r\n\r\n    _initListeners(resolve, reject, file) {\r\n        const xhr = this.xhr;\r\n        const loader = this.loader;\r\n        const genericErrorText = '파일을 업로드 할 수 없습니다.'\r\n\r\n        xhr.addEventListener('error', () => { reject(genericErrorText) })\r\n        xhr.addEventListener('abort', () => reject())\r\n        xhr.addEventListener('load', () => {\r\n            const response = xhr.response\r\n            if (!response || response.error) {\r\n                return reject(response && response.error ? response.error.message : genericErrorText);\r\n            }\r\n\r\n            resolve({\r\n                default: response.url //업로드된 파일 주소\r\n            })\r\n        })\r\n    }\r\n\r\n    _sendRequest(file) {\r\n        const data = new FormData()\r\n        data.append('upload', file)\r\n        this.xhr.send(data)\r\n    }\r\n}\r\nfunction MyCustomUploadAdapterPlugin(editor) {\r\n    editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {\r\n        return new UploadAdapter(loader)\r\n    }\r\n}"]}